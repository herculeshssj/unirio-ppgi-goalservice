wsmlVariant _"http://www.wsmo.org/wsml/wsml-syntax/wsml-flight"

namespace { _"http://www.uniriotec.br/aspect#",
	onto _"http://www.uniriotec.br/aspect#",
	wsml _"http://www.wsmo.org/wsml/wsml-syntax#",
	dc _"http://purl.org/dc/elements/1.1#",
	discovery _"http://wiki.wsmx.org/index.php?title=DiscoveryOntology#"
 }

webService SimpleLog
	nfp
		dc#title hasValue "Simple Log service"
		dc#contributor hasValue "Hercules S. S. Jose"
		dc#description hasValue "Show the information on console"
		_"http://owner" hasValue _"http://www.uniriotec.br/aspect/logging"
	endnfp
	importsOntology {
		onto#LogOntology
	}
	capability SimpleLogCapability
		nfp
  			discovery#discoveryStrategy hasValue discovery#LightweightDiscovery
  			discovery#discoveryStrategy hasValue discovery#NoPreFilter
		endnfp
		
		postcondition
			definedBy
				?logEffect memberOf onto#LogEffect
					and ?logEffect[messageLogged hasValue _boolean("true")]
					and ?logEffect[messageShowed hasValue _boolean("true")].

interface SimpleLogInterface
	choreography SimpleLogChoreography
	stateSignature SimpleLogStateSignature
		importsOntology onto#LogOntology
		in
			onto#LogRequest withGrounding _"http://localhost:8080/LogApp/services/LogService?wsdl#wsdl.interfaceMessageReference(LogService/simpleLogService/simpleLogServiceRequest)"
		out
			onto#LogEffect withGrounding _"http://localhost:8080/LogApp/services/LogService?wsdl#wsdl.interfaceMessageReference(LogService/simpleLogService/simpleLogServiceResponse)"
	
	transitionRules SimpleLogTransitionRules
		forall {?request} with (?request memberOf onto#LogRequest) do
			add (_# memberOf onto#LogEffect)
		endForall