wsmlVariant _"http://www.wsmo.org/wsml/wsml-syntax/wsml-rule"

namespace { _"http://www.uniriotec.br/aspect/ws/logging#",
	onto _"http://www.uniriotec.br/aspect/logging#",
	dc _"http://purl.org/dc/elements/1.1#",
	discovery _"http://wiki.wsmx.org/index.php?title=DiscoveryOntology#"
}

webService MailLog
	nfp
		dc#title hasValue "Mail Log service"
		dc#contributor hasValue "Hercules S. S. Jose"
		dc#description hasValue "Send the information logged by e-mail"
		_"http://owner" hasValue _"http://www.uniriotec.br/aspect/ws/logging"
	endnfp
	
capability MailLogCapability
	importsOntology onto#LogOntology
	
	nfp
		discovery#discoveryStrategy hasValue discovery#LightweightDiscovery
  		discovery#discoveryStrategy hasValue discovery#NoPreFilter
	endnfp	
	
	sharedVariables
		?logEffect

	postcondition MailLogPostcond
		definedBy
			?logRequest memberOf onto#LogRequest
			and
			?logEffect [
				onto#messageLogged hasValue _boolean("true"),
				onto#mailSent hasValue _boolean("true")
			] memberOf onto#LogEffect.
			
interface MailLogInterface
	importsOntology onto#LogOntology
	
	choreography MailLogChoreography
	stateSignature MailLogStateSignature
		importsOntology onto#LogOntology
		in
			concept onto#LogRequest withGrounding _"http://localhost:8080/LogApp/services/LogService?wsdl#wsdl.interfaceMessageReference(LogService/mailLogService/mailLogServiceRequest)"
			
		out 
			concept onto#LogEffect withGrounding _"http://localhost:8080/LogApp/services/LogService?wsdl#wsdl.interfaceMessageReference(LogService/mailLogService/mailLogServiceResponse)"
		
	transitionRules MailLogTransitionRules
		forall {?request} with (?request memberOf onto#LogRequest) do
			add(_# memberOf onto#LogEffect)
		endForall